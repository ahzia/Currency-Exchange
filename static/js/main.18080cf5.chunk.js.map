{"version":3,"sources":["components/NavBarIcon.js","components/NavBar.js","components/pages/Exchange.js","components/pages/Favorite.js","components/CurrencyCard.js","components/pages/Home.js","api/exchangeRate.js","redux/forexData/forexExchange.js","components/ExchangeCard.js","components/CurrencyExchangeRates.js","components/pages/Details.js","redux/forexData/forex.js","App.js","reportWebVitals.js","redux/configureStore.js","index.js"],"names":["NavBarIcon","Icon","text","className","NavBar","to","FaHome","FaBitcoin","FaHeart","BsCurrencyExchange","AiTwotoneSetting","Exchange","Favorite","CurrencyCard","name","rate","baseCurrency","currencyLowerCase","toLowerCase","currencyClass","Home","data","loading","error","history","useHistory","handleOnCardClick","currency","push","forex","rates","Object","entries","base","date","map","currencyData","onClick","role","onKeyDown","tabIndex","url","latestRates","a","source","amount","places","endPoint","fetch","response","json","FETCH_LOADING","FETCH_SUCCESS_RATES","FETCH_ERROR","initialState","exchange","fetchSuccessRates","payload","type","reducer","state","action","ExchangeCard","CurrencyExchangeRates","Details","currencyName","match","params","dispatch","useDispatch","useEffect","getState","forexDetails","result","then","catch","forexRates","useSelector","details","fetchLoading","fetchError","App","fetchRequestForexRates","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","forexReducer","forexExchangeReducer","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18080cf5.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nconst NavBarIcon = ({ Icon, text = 'tooltip ðŸ’¡' }) => (\n  <div className=\"sidebar-icon group\">\n    <Icon />\n    <span className=\"sidebar-tooltip group-hover:scale-100 hidden xl:inline\">\n      {text}\n    </span>\n  </div>\n);\n\nexport default NavBarIcon;\n","import { Link } from 'react-router-dom';\nimport { FaHome, FaHeart, FaBitcoin } from 'react-icons/fa';\nimport { BsCurrencyExchange } from 'react-icons/bs';\nimport { AiTwotoneSetting } from 'react-icons/ai';\nimport NavBarIcon from './NavBarIcon';\n\nconst NavBar = () => (\n  <div className=\"fixed bottom-0 sm:top-0 sm:left-0 flex sm:flex-col h-16 w-screen sm:h-screen sm:w-16 justify-around items-center xl:justify-start bg-gray-900 shadow-lg \">\n    <Link to=\"/\"><NavBarIcon Icon={FaHome} text=\"Home ðŸ’¡\" /></Link>\n    <Link to=\"/favorite\"><NavBarIcon Icon={FaBitcoin} text=\"Crypto Curenccy ðŸ’¡\" /></Link>\n    <Link to=\"/favorite\"><NavBarIcon Icon={FaHeart} text=\"Favorite ðŸ’¡\" /></Link>\n    <Link to=\"/exchange\"><NavBarIcon Icon={BsCurrencyExchange} text=\"Exchange ðŸ’¡\" /></Link>\n    <Link to=\"/exchange\"><NavBarIcon Icon={AiTwotoneSetting} text=\"Settings ðŸ’¡\" /></Link>\n  </div>\n);\n\nexport default NavBar;\n","const Exchange = () => (\n  <div className=\"h-screen w-full bg-gray-700 mb-16 sm:mb-0 sm:ml-16\">\n    <p className=\"text-white text-9xl \">coming Soon</p>\n  </div>\n);\n\nexport default Exchange;\n","const Favorite = () => (\n  <div className=\"h-screen w-full bg-gray-700 mb-16 sm:mb-0 sm:ml-16\">\n    <p className=\"text-white text-9xl \">coming Soon</p>\n  </div>\n);\n\nexport default Favorite;\n","import PropTypes from 'prop-types';\nimport { BsFillArrowRightCircleFill } from 'react-icons/bs';\n\nconst CurrencyCard = ({ name, rate, baseCurrency }) => {\n  const currencyLowerCase = name.toLowerCase();\n  const currencyClass = `currency-flag currency-flag-xl currency-flag-${currencyLowerCase}`;\n  return (\n    <div className=\"currency-card\">\n      <div className=\"w-full flex justify-between\">\n        <div className={currencyClass} />\n        <BsFillArrowRightCircleFill />\n      </div>\n      <div className=\"px-6 py-4 self-end\">\n        <div className=\"font-bold text-xl mb-2\">{name}</div>\n        <p>\n          {rate}\n          {baseCurrency}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nCurrencyCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  rate: PropTypes.number.isRequired,\n  baseCurrency: PropTypes.string.isRequired,\n};\n\nexport default CurrencyCard;\n","import PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport CurrencyCard from '../CurrencyCard';\n\nconst Home = ({ data }) => {\n  if (data.loading) {\n    return (\n      <p>loading</p>\n    );\n  }\n  if (data.error) {\n    return (\n      <p>error</p>\n    );\n  }\n  const history = useHistory();\n  function handleOnCardClick(currency) {\n    history.push(`/details/${currency}`);\n  }\n  const { forex } = data;\n  const rates = Object.entries(forex.rates);\n  const currencyLowerCase = forex.base.toLowerCase();\n  const currencyClass = `currency-flag currency-flag-xl currency-flag-${currencyLowerCase}`;\n  return (\n    <div className=\"content-container\">\n      <div className=\"page-header\">\n        <div className=\"m-auto\">\n          <div className={currencyClass} />\n        </div>\n        <div className=\"m-auto\">\n          <p className=\"font-bold text-xl\">\n            {forex.base}\n          </p>\n          <p>\n            Last Update:\n            {forex.date}\n          </p>\n        </div>\n      </div>\n      <div className=\"bg-gray-700 text-pink-500 mx-4  \">\n        Exchange Rates for base currency:\n        {forex.base}\n      </div>\n      <div className=\"grid grid-cols-2 md:grid-cols-6\">\n        {rates.map((currencyData) => (\n          // currencyData[0] is the Currency name and currencyData[1] is the Exchange rate\n          <div key={currencyData[0]} onClick={() => handleOnCardClick(currencyData[0])} role=\"button\" onKeyDown={() => handleOnCardClick(currencyData[0])} tabIndex={0}>\n            <CurrencyCard\n              name={currencyData[0]}\n              rate={currencyData[1]}\n              baseCurrency={forex.base}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Home;\n","const url = 'https://api.exchangerate.host';\n\nconst latestRates = async (base = 'usd', source = 'forex', amount = 1, places = 2) => {\n  let endPoint = `${url}/latest?base=${base}&amount=${amount}&places=${places}`;\n  // forex is the default sourse\n  endPoint = (source === 'forex') ? endPoint : `${endPoint}&source=${source}`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return data;\n};\n\nconst getsymbols = async () => {\n  const endPoint = `${url}/symbols`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return data.symbols;\n};\n\nconst convert = async (from, to, source = 'forex', amount = 1) => {\n  let endPoint = `${url}/convert?from=${from}&to=${to}&amount=${amount}`;\n  endPoint = (source === 'forex') ? endPoint : `${endPoint}&source=${source}`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return data.result;\n};\n\nconst bankSources = async () => {\n  const endPoint = `${url}/sources`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return data.sources;\n};\n\nconst cryptoList = async () => {\n  const endPoint = `${url}/cryptocurrencies`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return data.cryptocurrencies;\n};\n\nexport {\n  latestRates, getsymbols, convert, bankSources, cryptoList,\n};\n","import { latestRates } from '../../api/exchangeRate';\n\nconst FETCH_LOADING = 'FETCH_LOADING';\nconst FETCH_SUCCESS_RATES = 'FETCH_SUCCESS_RATES';\nconst FETCH_ERROR = 'FETCH_ERROR';\n\nconst initialState = {\n  loading: true,\n  exchange: {},\n  error: null,\n};\n\nexport const fetchLoading = () => ({\n  type: FETCH_LOADING,\n});\n\nexport const fetchSuccessRates = (payload, currency) => ({\n  type: FETCH_SUCCESS_RATES,\n  payload,\n  currency,\n});\n\nexport const fetchError = (payload) => ({\n  type: FETCH_ERROR,\n  payload,\n});\n\nexport const fetchRequestForexExchange = (currency) => async (dispatch, getState) => {\n  dispatch(fetchLoading());\n  if (!getState().forexDetails.exchange[currency]) {\n    latestRates(currency)\n      .then((result) => {\n        dispatch(\n          fetchSuccessRates(result, currency),\n        );\n      })\n      .catch((error) => {\n        fetchError(error);\n      });\n  } else {\n    const result = getState().forexDetails.exchange[currency];\n    dispatch(\n      fetchSuccessRates(result, currency),\n    );\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_LOADING:\n      return {\n        exchange: { ...state.exchange },\n        loading: true,\n        error: null,\n      };\n\n    case FETCH_SUCCESS_RATES:\n      if (!action.currency) {\n        return {\n          loading: false,\n          exchange: { ...state.exchange },\n          error: null,\n        };\n      }\n      return {\n        loading: false,\n        exchange: { ...state.exchange, [action.currency]: action.payload },\n        error: null,\n      };\n    case FETCH_ERROR:\n      return {\n        loading: false,\n        exchange: [],\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import PropTypes from 'prop-types';\nimport { BsFillArrowRightCircleFill } from 'react-icons/bs';\n\nconst ExchangeCard = ({ name, rate, baseCurrency }) => {\n  const currencyLowerCase = name.toLowerCase();\n  const currencyClass = `currency-flag currency-flag-xl currency-flag-${currencyLowerCase}`;\n\n  return (\n    <div className=\"exchange-card\">\n      <div className=\"flex\">\n        <div className={currencyClass} />\n        <div className=\"font-bold text-xl mx-5\">{name}</div>\n      </div>\n      <div className=\"flex items-center\">\n        <p className=\"text-xl mx-3\">\n          {rate}\n          {baseCurrency}\n        </p>\n        <BsFillArrowRightCircleFill />\n      </div>\n    </div>\n  );\n};\n\nExchangeCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  rate: PropTypes.number.isRequired,\n  baseCurrency: PropTypes.string.isRequired,\n};\n\nexport default ExchangeCard;\n","import PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { MdOutlineArrowBackIosNew } from 'react-icons/md';\nimport ExchangeCard from './ExchangeCard';\n\nconst CurrencyExchangeRates = ({ currency, data }) => {\n  if (data.loading) {\n    return (\n      <p>loading</p>\n    );\n  }\n  if (data.error) {\n    return (\n      <p>error</p>\n    );\n  }\n  if (!data.exchange[currency]) {\n    return (\n      <p>No Result for this currency</p>\n    );\n  }\n  const rates = Object.entries(data.exchange[currency].rates);\n  const currencyLowerCase = currency.toLowerCase();\n  const currencyClass = `currency-flag currency-flag-xl currency-flag-${currencyLowerCase}`;\n  const history = useHistory();\n\n  return (\n    <div className=\"content-container\">\n      <div className=\"bg-gray-700 text-pink-500 mx-4 my-4 text-md flex items-center hover:text-white hover:cursor-pointer\" onClick={() => history.push('/')} role=\"button\" onKeyDown={() => history.push('/')} tabIndex={0}>\n        <MdOutlineArrowBackIosNew />\n        <p>\n          Back\n        </p>\n      </div>\n      <div className=\"page-header\">\n        <div className=\"m-auto\">\n          <div className={currencyClass} />\n        </div>\n        <div className=\"m-auto\">\n          <p className=\"font-bold text-xl\">\n            {currency}\n          </p>\n          <p>\n            Last Update:\n            {data.exchange[currency].date}\n          </p>\n        </div>\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\n        {rates.map((currencyData) => (\n          <div key={currencyData[0]}>\n            <ExchangeCard name={currencyData[0]} rate={currencyData[1]} baseCurrency={currency} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nCurrencyExchangeRates.propTypes = {\n  data: PropTypes.instanceOf(Array).isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default CurrencyExchangeRates;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchRequestForexExchange } from '../../redux/forexData/forexExchange';\nimport CurrencyExchangeRates from '../CurrencyExchangeRates';\n\nconst Details = ({ match }) => {\n  const { params: { currencyName } } = match;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRequestForexExchange(currencyName));\n  }, []);\n\n  const forexRates = useSelector((state) => state.forexDetails);\n  return (\n    <div>\n      <CurrencyExchangeRates currency={currencyName} data={forexRates} />\n    </div>\n  );\n};\n\nDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      currencyName: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default Details;\n","import { latestRates } from '../../api/exchangeRate';\n\nconst FETCH_LOADING = 'FETCH_LOADING';\nconst FETCH_SUCCESS_RATES = 'FETCH_SUCCESS_RATES';\nconst FETCH_ERROR = 'FETCH_ERROR';\n\nconst initialState = {\n  loading: true,\n  forex: {},\n  error: null,\n  details: [],\n};\n\nexport const fetchLoading = () => ({\n  type: FETCH_LOADING,\n});\n\nexport const fetchSuccessRates = (payload) => ({\n  type: FETCH_SUCCESS_RATES,\n  payload,\n});\n\nexport const fetchError = (payload) => ({\n  type: FETCH_ERROR,\n  payload,\n});\n\nexport const fetchRequestForexRates = (base = 'usd') => async (dispatch) => {\n  dispatch(fetchLoading());\n  latestRates(base)\n    .then((result) => {\n      dispatch(\n        fetchSuccessRates(result),\n      );\n    })\n    .catch((error) => {\n      fetchError(error);\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_LOADING:\n      return {\n        forex: { ...state.forex },\n        loading: true,\n        error: null,\n      };\n\n    case FETCH_SUCCESS_RATES:\n      return {\n        loading: false,\n        forex: action.payload,\n        error: null,\n      };\n\n    case FETCH_ERROR:\n      return {\n        loading: false,\n        forex: {},\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport NavBar from './components/NavBar';\nimport Exchange from './components/pages/Exchange';\nimport Favorite from './components/pages/Favorite';\nimport Home from './components/pages/Home';\nimport Details from './components/pages/Details';\nimport { fetchRequestForexRates } from './redux/forexData/forex';\nimport './flags.css';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRequestForexRates());\n  }, []);\n\n  const forexRates = useSelector((state) => state.forex);\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home data={forexRates} />\n          </Route>\n          <Route path=\"/details/:currencyName\" component={Details} />\n          <Route path=\"/favorite\" exact>\n            <Favorite />\n          </Route>\n          <Route path=\"/exchange\" exact>\n            <Exchange />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport forexReducer from './forexData/forex';\nimport forexExchangeReducer from './forexData/forexExchange';\n\nconst reducer = combineReducers({\n  forex: forexReducer,\n  forexDetails: forexExchangeReducer,\n});\n\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}